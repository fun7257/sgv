name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to build (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write # Add this line to grant write permissions for contents
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]
        

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag_name || github.ref }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4'

    - name: Set Environment Variables
      id: set_vars
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          echo "goos=linux" >> $GITHUB_OUTPUT
          echo "ext=" >> $GITHUB_OUTPUT
        else
          echo "goos=darwin" >> $GITHUB_OUTPUT
          echo "ext=" >> $GITHUB_OUTPUT
        fi

    - name: Download Go modules
      shell: bash
      run: |
        go mod tidy
        go mod download

    - name: Build
      shell: bash
      env:
        GOOS: ${{ steps.set_vars.outputs.goos }}
        GOARCH: ${{ matrix.arch }}
      run: go build -o sgv${{ steps.set_vars.outputs.ext }}

    - name: Archive production artifacts
      id: archive
      shell: bash
      run: |
        TAG_NAME=${{ github.event.inputs.tag_name || github.ref_name }}
        FILENAME_BASE="sgv_${TAG_NAME#v}_${{ steps.set_vars.outputs.goos }}_${{ matrix.arch }}"
        FILENAME="${FILENAME_BASE}.tar.gz"
        tar -czvf "${FILENAME}" sgv
        echo "filename=${FILENAME}" >> $GITHUB_OUTPUT

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      with:
        files: ${{ steps.archive.outputs.filename }}
        tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
